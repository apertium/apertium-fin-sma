!!!!!!!!!!!!!!!
!! ATTRIBUTE CATEGORIES
!!!!!!!!!!!!!!!

number = (ND sg) sg pl sp ND;
gender = m f mf;
nptype = ant top cog al geo ;
case = nom acc gen par ine ela ill ade abl all com abe ess ;
det_type = def ind dem itg;
tense = pres past pret fut ifi pri fti;
person = p1 p2 p3 ;
voice = actv pasv ;
mood = pri pot ind indic imp past ;
comparison = (UNC pos) pos cmp sup UNC ;
transit = tv iv ;

!!!!!!!!!!!!!!!
!! OUTPUT PATTERNS
!!!!!!!!!!!!!!!

vblex: _.transit.mood.tense.person.number; 
adv: _;
num: _.number.case;
n: _.number.case;
np: _.nptype.gender.number.case;
prn: _.number.case;
adj: _.number.case;
det_default: _.det_type;
det_def: _.det_type.number;
cnjcoo: _;
pcle: _;

ADVP: _;
VP: _;
AP: _;
NUMP: _;
NP: _.number;
CCP: _;
PCLEP: _;

!!!!!!!!!!!!!!!
!! TAG-REWRITE RULES
!!!!!!!!!!!!!!!

mood > mood : pri indic, past indic ;
tense > tense : pri pres, past pret ;
case > case : par acc ;

!!!!!!!!!!!!!!!
!! MACROS
!!!!!!!!!!!!!!!

det: (if (1.det_type = def or 1.det_type = ind)
         1(det_def)
      else
         1(det_default));

!!!!!!!!!!!!!!!
!! REDUCTION RULES
!!!!!!!!!!!!!!!

VP -> vblex { 1 } ;
NP -> n { 1 } |
      prn { 1 } ;
NUMP -> num { 1 } ;
AP -> adj { 1 } ;
ADVP -> adv { 1 } |
        pcle { 1 } ;
CCP -> cnjcoo { 1 } ;

! Example rule:
! Input:  ^ראש<n><m><sg>/hovud<n><nt><sg>$ ^גדול<adj><m><sg>/stor<adj><nt><sg>$
! Output: ^stor<adj><nt><sg>$ ^hovud<n><nt><sg>$
! NP -> n.$number adj { 2[gender=1.gender, number=1.number] _ 1 } ;

! Resources:
! https://wiki.apertium.org/wiki/Apertium-recursive
! https://wiki.apertium.org/wiki/Apertium-recursive/Formalism
! https://wiki.apertium.org/wiki/Apertium-recursive/Cookbook
